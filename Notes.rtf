{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\ftech\fcharset77 Symbol;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Train on different stages,\
Train on one weights to capture flags\
2 conv layer and 2 fc layers\
200 for the dense layer\
Conv layer, start with a 4 by 4\
\
\
https://medium.com/@awjuliani/simple-reinforcement-learning-with-tensorflow-part-4-deep-q-networks-and-beyond-8438a3e2b8df\
\
https://github.com/awjuliani/DeepRL-Agents/blob/master/Double-Dueling-DQN.ipynb\
\
https://arxiv.org/pdf/1602.01783.pdf\
\
Instantiate multiple, get gradients, and push them to the policy\
\
______________\
Add the synchronous update:\
\pard\pardeftab720\sl280\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 if T mod Itarget == 0 then Update the target network \uc0\u952  \u8722  
\f2 \uc0\u8592 
\f1  \uc0\u952  end if if t mod IAsyncUpdate == 0 or s is terminal then Perform asynchronous update of \u952  using d\u952 . Clear gradients d\u952  
\f2 \uc0\u8592 
\f1  0. end if until T > Tmax\
Later go to this\
\
\
R 
\f2 \uc0\u8592 
\f1  ri + \uc0\u947 R\
\
Read the 2 above advantage-critic\
1 step Q, and n step q read}